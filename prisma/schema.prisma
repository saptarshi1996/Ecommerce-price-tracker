generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {

  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(255)
  lastName  String?  @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  isActive  Boolean? @default(false)

  createdAt DateTime? @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  updatedAt DateTime? @db.Timestamp(6)

  userRegistrations UserRegistration[]

  @@map("users")
}

model UserRegistration {

  id        Int       @id @default(autoincrement())
  otp       Int       @db.Int()
  isRevoked Boolean?  @default(false) @db.TinyInt
  expiresAt DateTime? @db.Timestamp(6)

  createdAt DateTime? @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  updatedAt DateTime? @db.Timestamp(6)

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  @@map("user_registrations")
}

model Url {

  id   Int    @id @default(autoincrement())
  url  String @db.Text()
  site String @db.VarChar(255)

  createdAt DateTime? @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  updatedAt DateTime? @db.Timestamp(6)

  Product Product?

  @@map("urls")
}

model Product {

  id           Int     @id @default(autoincrement())
  name         String  @db.VarChar(255)
  currentPrice Float?  @db.Float()
  lowestPrice  Float?  @db.Float()
  imageUrl     String? @db.Text()
  isInStock    Boolean @default(false) @db.TinyInt

  urlId Int? @unique
  url   Url? @relation(fields: [urlId], references: [id])

  createdAt DateTime? @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  updatedAt DateTime? @db.Timestamp(6)

  @@map("products")
}
